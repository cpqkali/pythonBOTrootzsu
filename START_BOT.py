import subprocess
import sys
from colorama import init, Fore, Style

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Colorama –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ü–≤–µ—Ç–æ–≤ –≤ –∫–æ–Ω—Å–æ–ª–∏
init(autoreset=True)

def print_banner():
    """
    –í—ã–≤–æ–¥–∏—Ç –∫—Ä–∞—Å–∏–≤—ã–π ASCII-–∞—Ä—Ç –±–∞–Ω–Ω–µ—Ä.
    """
    banner_art = """
    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù
    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù   ‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
    ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïë    ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë ‚ïö‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó
    ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë    ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù
    ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù   ‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
    """
    print(Fore.CYAN + Style.BRIGHT + banner_art)
    print(Fore.YELLOW + Style.BRIGHT + "            Bot Launcher & Real-time Monitor v1.0")
    print("-" * 60)

def stylize_log(line):
    """
    –ü—Ä–∏–º–µ–Ω—è–µ—Ç —Å—Ç–∏–ª–∏ –∫ —Å—Ç—Ä–æ–∫–µ –ª–æ–≥–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ.
    """
    line = line.strip()
    if not line:
        return ""

    # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    if "ERROR" in line or "error" in line.lower():
        return Fore.RED + Style.BRIGHT + f"[üî• ERROR] {line}"
    elif "WARNING" in line or "warn" in line.lower():
        return Fore.YELLOW + Style.BRIGHT + f"[‚ö†Ô∏è WARN]  {line}"
    elif "CRITICAL" in line:
        return Fore.RED + Style.BRIGHT + f"[üí• CRIT]  {line}"
    
    # –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã
    elif "–æ–¥–æ–±—Ä—è–µ—Ç –∑–∞–∫–∞–∑" in line.lower():
        return Fore.GREEN + Style.BRIGHT + f"[‚úÖ APPROVE] {line}"
    elif "–æ—Ç–∫–ª–æ–Ω—è–µ—Ç –∑–∞–∫–∞–∑" in line.lower():
        return Fore.MAGENTA + Style.BRIGHT + f"[‚ùå DECLINE] {line}"
    elif "–Ω–æ–≤–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã" in line.lower():
        return Fore.BLUE + Style.BRIGHT + f"[üí∞ PAYMENT] {line}"
    elif "–Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å" in line.lower():
        return Fore.GREEN + f"[üë§ NEW USER] {line}"
    elif "–∑–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω" in line.lower():
        return Fore.CYAN + f"[üõí NEW ORDER] {line}"
    elif "–∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞" in line.lower():
         return Fore.WHITE + Style.BRIGHT + f"[üöÄ SYSTEM] {line}"
    
    # –õ–æ–≥–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    else:
        return Fore.WHITE + f"[‚ÑπÔ∏è INFO]  {line}"

def run_bot():
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç bot.py –∫–∞–∫ –¥–æ—á–µ—Ä–Ω–∏–π –ø—Ä–æ—Ü–µ—Å—Å –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –µ–≥–æ –≤—ã–≤–æ–¥.
    """
    print(stylize_log("–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞... –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏."))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º bot.py, –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—è –µ–≥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤—ã–≤–æ–¥ (stdout)
    # –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤—ã–≤–æ–¥ –æ—à–∏–±–æ–∫ (stderr) –≤ –æ–¥–∏–Ω –ø–æ—Ç–æ–∫.
    try:
        process = subprocess.Popen(
            [sys.executable, "bot.py"],
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
            text=True,
            encoding='utf-8',
            bufsize=1  # –í–∫–ª—é—á–∞–µ–º –ø–æ—Å—Ç—Ä–æ—á–Ω—É—é –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—é
        )

        # –ß–∏—Ç–∞–µ–º –≤—ã–≤–æ–¥ –±–æ—Ç–∞ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
        for line in iter(process.stdout.readline, ''):
            print(stylize_log(line))

        # –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
        process.wait()
        if process.returncode != 0:
            print(stylize_log(f"–ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏: {process.returncode}"))

    except FileNotFoundError:
        print(stylize_log("–û–®–ò–ë–ö–ê: –§–∞–π–ª 'bot.py' –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ."))
    except KeyboardInterrupt:
        print(stylize_log("\n–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è (Ctrl+C). –ó–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞..."))
        process.terminate()  # –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
        process.wait()
        print(stylize_log("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."))
    except Exception as e:
        print(stylize_log(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}"))


if __name__ == "__main__":
    print_banner()
    run_bot()
